# [Joint quantities and complex data types]{.yellow} {#sec-quantities-types-multi}
{{< include macros.qmd >}}

Quantities of more complex types can often be viewed and represented as sets (that is, collections) of quantities of basic and possibly different types.

## Joint quantities {#sec-data-multiv}

A simple collection of quantities of basic types, for instance "age, sex, nationality", usually does not have any new mathematical properties appearing just because we're considering those quantities together. We shall call such a collection a [**joint quantity**]{.blue}. Note that a "joint quantity" it is still a quantity, but not a quantity of a basic type.

The values of a joint quantity are just tuples of values of its basic component quantities. Its domain is the [Cartesian product](https://mathworld.wolfram.com/CartesianProduct.html) of the domains of the basic quantities.

Consider for instance the age, sex^[We define *sex* by the presence of at least one [Y chromosome](https://www.genome.gov/about-genomics/fact-sheets/Y-Chromosome-facts) or not. It is different from *gender*, which involves how a person identifies.], and [nationality](https://www.gov.uk/government/publications/nationalities/list-of-nationalities) of a particular individual. They can be represented as an interval-continuous quantity $A$, a binary one $S$, and a nominal one $N$. We can join them together to form the joint quantity\ \ "(age, sex, nationality)"\ \ which can be denoted by\ \ $(A,S,N)$.\ \ One value of this joint quantity is, for example, $(25\,\mathrm{y}, \cat{F}, \cat{Norwegian})$. The domain could be

$$
[0,+\infty)\times
\set{\cat{F}, \cat{M}} \times
\set{\cat{Afghan}, \cat{Albanian}, \dotsc, \cat{Zimbabwean}}
$$

### Discreteness, boundedness, continuity

A joint quantity may not be simply characterized as "discrete", or "bounded", or "infinite", and so on. Usually we must specify these characteristics for each of its basic component quantities instead. Sometimes a joint quantity is called, for instance, "continuous" if all its basic components are continuous; but other conventions are also used.

:::{.callout-caution}


Consider again the examples of [§@sec-quant-value-dom]. Do you find any examples of joint quantities?
:::

## Complex quantities {#sec-data-complex}

We shall call "complex quantity" a quantity that is not of a basic type, nor a collection of quantities of basic type, that is, a joint quantity.

Familiar examples of complex quantities are vectorial quantities from physics and engineering, such as location, velocity, force, torque. Other examples are images, sounds, videos.

Note that a complex quantity may be *represented* as a collection of quantities of basic type. This collection, however, is "more than the sum of its parts", in the sense that it has new mathematical properties that do not apply or do not make sense for the single components.

Consider for example a 4 × 4 monochrome image, represented as a grid of 16 binary quantities $0$ or $1$. Three possible values could be these:

![](threegrid1.png){width=6em}\ \ ![](threegrid2.png){width=6em}\ \ ![](threegrid3.png){width=6em}

We can numerically represent these images as the matrices

$\begin{psmallmatrix}1&0&0&0\\0&0&0&0\\0&0&0&0\\0&0&0&0\end{psmallmatrix}$,
$\begin{psmallmatrix}0&1&0&0\\0&0&0&0\\0&0&0&0\\0&0&0&0\end{psmallmatrix}$,
$\begin{psmallmatrix}0&0&0&0\\0&0&0&0\\0&0&0&0\\0&0&0&1\end{psmallmatrix}$.

With this representation, this quantity is made to correspond to 16 binary digits, or in other words 16 [binary quantities](quantities_types.html#binary).

From the point of view of the individual binary quantities, these three values are "equally different" from one another: where one of them has grid value $1$, the others have $0$. But properly considered as images, we can say that the first and the second are somewhat more "similar" or "closer" to each other than the first and the third. This similarity can be represented and quantified by a [*metric*](https://mathworld.wolfram.com/Metric.html) over the domain of all such images. This metric involves all basic binary quantities at once; it is a new mathematical property that does not belong to any of the 16 binary quantities individually.

More generally, complex quantities have additional, peculiar properties, represented by mathematical structures, which distinguish them from joint quantities; although there is not a clear separation between the two.

These properties and structures are very important for inference problems, and usually make them computationally very hard. Machine-learning methods are important because they allow us to do approximate inference on these kinds of complex data. The peculiar structures of these data, however, are often also the cause of striking failures of some machine-learning methods, for example the reason why [they may classify incorrectly](https://towardsdatascience.com/breaking-neural-networks-with-adversarial-attacks-f4290a9a45aa), or why they may classify correctly but for the wrong reason.
